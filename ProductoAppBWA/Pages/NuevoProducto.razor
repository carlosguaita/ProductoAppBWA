@page "/producto"
@page "/producto/{IdProducto:int}/{IsEditing:bool}"
@using ProductoAppBWA.Models
@using ProductoAppBWA.Service
@inject NavigationManager NavigationManager
@inject IAPIService iapiservice


@if (IdProducto == 0)
{
    <h3>Nuevo Producto</h3>
}
else
{
    <h3>Editar Producto</h3>
}

<EditForm Model="producto" OnSubmit="Enviar">
    <div class="form-group row mb-3">
        <label for="Nombre" class="col-md-2 col-form-label">Nombre:</label>
        <div class="col-md-10">
            <InputText id="Nombre" class="form-control" @bind-Value="producto.Nombre" disabled="@IsEditing" />
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="Cantidad" class="col-md-2 col-form-label">Cantidad:</label>
        <div class="col-md-10">
            <InputNumber id="Cantidad" class="form-control" @bind-Value="producto.Cantidad" disabled="@IsEditing" />
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="Descripcion" class="col-md-2 col-form-label">Descripcion:</label>
        <div class="col-md-10">
            <InputTextArea id="Descripcion" class="form-control" @bind-Value="producto.Descripcion" disabled="@IsEditing" />
        </div>
    </div>

    <div class="form-group row mb-3">
        <label for="UrlImagen" class="col-md-2 col-form-label">Imagen:</label>
        <div class="col-md-10">
            <InputFile id="UrlImagen" class="form-control" name="file" @bind-Value="producto.UrlImage" disabled="@IsEditing" />
        </div>
    </div>
    <div class="btn-group" role="group">
        @if (!IsEditing)
        {
            <button type="submit" class="btn btn-success btn-lg" disabled="@IsEditing">Guardar</button>
        }
        <a role="button" href="/" class="btn btn-outline-secondary btn-lg">Regresar</a>
    </div>


</EditForm>

@code {

    [Parameter]
    public int IdProducto { set; get; }
    [Parameter]
    public bool IsEditing { set; get; }


    //public Producto? producto { set; get; }
    public Producto producto = new Producto();


    protected override async Task OnInitializedAsync()
    {
        if (IdProducto != 0)
        {
            //producto = Util.ListaProductos.FirstOrDefault(x => x.IdProducto == IdProducto);
            producto = await iapiservice.GetProducto(IdProducto);

        }
    }

    private async Task Enviar()
    {
        if (IdProducto == 0)
        {
            //producto.IdProducto = Util.ListaProductos.Count() + 1;
            //Util.ListaProductos.Add(producto);
            await iapiservice.PostProducto(producto);
        }
        else
        {
            await iapiservice.PutProducto(IdProducto, producto);
        }

        NavigationManager.NavigateTo("/");
    }
}

