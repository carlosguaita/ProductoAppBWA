@page "/producto"
@page "/producto/{IdProducto:int}/{IsEditing:bool}"
@using ProductoAppBWA.Models
@using ProductoAppBWA.Service
@inject NavigationManager NavigationManager
@inject IAPIService iapiservice
@inject IAPIStorageService iapistorageservice


@if (IdProducto == 0)
    {
        <h3>Nuevo Producto</h3>
    }
    else if (!IsEditing)
    {
        <h3>Editar Producto</h3>
    }
    else
    {
        <h3>Ver Producto</h3>
    }


<EditForm Model="producto" OnSubmit="Enviar">
    <div class="row">
        <div class="col-8">
            <div class="form-group mb-3">
                <label for="Nombre">Nombre:</label>
                <div class="col">
                    <InputText id="Nombre" class="form-control" @bind-Value="producto.Nombre" disabled="@IsEditing" />
                </div>
            </div>
            <div class="form-group mb-3">
                <label for="Cantidad">Cantidad:</label>
                <div class="col">
                    <InputNumber id="Cantidad" class="form-control" @bind-Value="producto.Cantidad" disabled="@IsEditing" />
                </div>
            </div>
            <div class="form-group mb-3">
                <label for="Descripcion">Descripcion:</label>
                <div class="col">
                    <InputTextArea id="Descripcion" class="form-control" @bind-Value="producto.Descripcion" disabled="@IsEditing" />
                </div>
            </div>
        </div>
        <div class="col-2">
            <label for="UrlImagen">Imagen:</label>
            <img src="@imageSource" width="200" height="200" style="border-radius:5px; border:1px solid #bbb9b9" />
            @if (!IsEditing)
            {
                <div class="form-group mb-3">

                    <div class="col">
                        <InputFile id="UrlImagen" class="form-control" OnChange="LoadFiles" name="file" disabled="@IsEditing" />
                    </div>
                </div>
            }
        </div>
    </div>



    

   
    <div class="btn-group" role="group">
        @if (!IsEditing)
        {
            <button type="submit" class="btn btn-success btn-lg" disabled="@IsEditing">Guardar</button>
        }
        <a role="button" href="/" class="btn btn-outline-secondary btn-lg">Regresar</a>
    </div>


</EditForm>

@code {

    [Parameter]
    public int IdProducto { set; get; }
    [Parameter]
    public bool IsEditing { set; get; }

    private IBrowserFile? file { set; get; }
    private string? imageSource { set; get; }

    //public Producto? producto { set; get; }
    public Producto producto = new Producto();


    protected override async Task OnInitializedAsync()
    {
        if (IdProducto != 0)
        {
            //producto = Util.ListaProductos.FirstOrDefault(x => x.IdProducto == IdProducto);
            producto = await iapiservice.GetProducto(IdProducto);
            imageSource = await iapistorageservice.GetUrlImage(producto.UrlImage);

        }
    }


    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        file = e.File;

        IBrowserFile imgFile = e.File;
        string imageType = imgFile.ContentType;
        var resizedImageFile = await imgFile.RequestImageFileAsync(imageType, 200, 200);
        var buffers = new byte[resizedImageFile.Size];
        await resizedImageFile.OpenReadStream().ReadAsync(buffers);
        imageSource = $"data:{imageType};base64,{Convert.ToBase64String(buffers)}";
    }

    private async Task Enviar()
    {
        if (IdProducto == 0)
        {
            //producto.IdProducto = Util.ListaProductos.Count() + 1;
            //Util.ListaProductos.Add(producto);

            Console.WriteLine($"**********************");
            if (file != null)
            {
                producto.UrlImage = await iapistorageservice.PostImage(file);
            }
            Console.WriteLine(producto.UrlImage);
            await iapiservice.PostProducto(producto);
        }
        else
        {
            if(file != null)
            {
                await iapistorageservice.DeleteImage(producto.UrlImage);
                producto.UrlImage = await iapistorageservice.PostImage(file);

            }
            await iapiservice.PutProducto(IdProducto, producto);
        }

        NavigationManager.NavigateTo("/");
    }
}

